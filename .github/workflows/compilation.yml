name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build-unix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        compiler: [gcc, clang]
    steps:
      - uses: actions/checkout@v2
      - name: Compile project
        env:
          CC: ${{ matrix.compiler }}
        run: make clean all DASM=1

  build-windoze:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
      - name: Set PATH
        run: echo "C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Compile project
        run: make platform=windows_msvc2017_desktop_x64 clean all

  build-ps2:
    runs-on: ubuntu-latest
    container: ps2dev/ps2dev:latest
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: apk add build-base

    - name: Get Information Variables
      id: core
      run: |
        echo "::set-output name=info::$(echo theodore)"
        echo "::set-output name=platform::$(echo ps2)"
        echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: Compile project
      run: make platform=${{ steps.core.outputs.platform }} clean all

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.core.outputs.info }}_libretro_${{ steps.core.outputs.platform }}-${{ steps.core.outputs.sha8 }}
        path: ${{ steps.core.outputs.info }}_libretro_${{ steps.core.outputs.platform }}.a

  build-psp:
    runs-on: ubuntu-latest
    container: greatwizard/devkitpsp:latest
    steps:
    - uses: actions/checkout@v2

    - name: Get Information Variables
      id: core
      run: |
        echo "::set-output name=info::$(echo theodore)"
        echo "::set-output name=platform::$(echo psp1)"
        echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: Compile project
      run: make platform=${{ steps.core.outputs.platform }} clean all

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.core.outputs.info }}_libretro_${{ steps.core.outputs.platform }}-${{ steps.core.outputs.sha8 }}
        path: ${{ steps.core.outputs.info }}_libretro_${{ steps.core.outputs.platform }}.a

  build-libnx:
    runs-on: ubuntu-latest
    container: devkitpro/devkita64:latest
    steps:
    - uses: actions/checkout@v2

    - name: Get Information Variables
      id: core
      run: |
        echo "::set-output name=info::$(echo theodore)"
        echo "::set-output name=platform::$(echo libnx)"
        echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: Compile project
      run: make platform=${{ steps.core.outputs.platform }} clean all

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.core.outputs.info }}_libretro_${{ steps.core.outputs.platform }}-${{ steps.core.outputs.sha8 }}
        path: ${{ steps.core.outputs.info }}_libretro_${{ steps.core.outputs.platform }}.a

